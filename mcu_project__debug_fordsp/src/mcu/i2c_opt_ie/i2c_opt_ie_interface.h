/***********************************************************************************

 * 文 件 名   : i2c_driver.h
 * 负 责 人   : fangzhe
 * 创建日期   : 2025年3月23日
 * 文件描述   : i2c的协义栈对外接口
 * 版权说明   : Copyright (C) 2000-2025   烽火通信科技股份有限公司
 * 其    他   : 
 * 修改日志   : 

***********************************************************************************/

#ifndef _I2C_OPT_IE_INTERFACE_H_
#define _I2C_OPT_IE_INTERFACE_H_

#include "gd32e501.h"

#include "i2c_opt_ie.h"


/*****************************************************************************
 * 函 数 名  : master_event_irq_handler
 * 负 责 人  : fz
 * 创建日期  : 2023年5月15日
 * 函数功能  : i2c的master中断事件
 * 输入参数  : 无
 * 输出参数  : 无
 * 返 回 值  : 无
 * 调用关系  : i2c0的中断事件产生
 * 其    它  : 

*****************************************************************************/
extern void master_i2c_event_irq_handler(uint32_t dev_i2c);

/*****************************************************************************
 * 函 数 名  : master_i2c_error_irq_handler
 * 负 责 人  : fz
 * 创建日期  : 2023年5月15日
 * 函数功能  : i2c的master的出错中断事件
 * 输入参数  : 无
 * 输出参数  : 无
 * 返 回 值  : 无
 * 调用关系  : i2c0的出错中断事件产生
 * 其    它  : 无

*****************************************************************************/
extern void master_i2c_error_irq_handler(uint32_t dev_i2c);



/*****************************************************************************
 * 函 数 名  : slave_event_irq_handler
 * 负 责 人  : fz
 * 创建日期  : 2023年5月15日
 * 函数功能  : i2c1的slave中断事件处理功能
 * 输入参数  : 无
 * 输出参数  : 无
 * 返 回 值  : 无
 * 调用关系  : i2c1的slave中断事件产生
 * 其    它  : 无

*****************************************************************************/
extern void slave_event_irq_handler(uint32_t dev_i2c);

/*****************************************************************************
 * 函 数 名  : slave_error_irq_handler
 * 负 责 人  : fz
 * 创建日期  : 2023年5月15日
 * 函数功能  : i2c1的slave错误中断事件处理功能
 * 输入参数  : 无
 * 输出参数  : 无
 * 返 回 值  : 无
 * 调用关系  : i2c1的slave错误中断事件产生
 * 其    它  : 无

*****************************************************************************/
extern void slave_error_irq_handler(void);



/*****************************************************************************
 * 函 数 名  : master_reg_byte_write
 * 负 责 人  : fz
 * 创建日期  : 2023年5月15日
 * 函数功能  : i2c的master写功能
 * 输入参数  : uint32_t slave_addr  slave地址
 				uint8_t* p_buffer	要写入的数据
 				uint32_t buffer_len 数据的长度
 * 输出参数  : 无
 * 返 回 值  : 无
 * 调用关系  : 外部接口
 * 其    它  : 无

*****************************************************************************/
extern void master_reg_byte_write(uint32_t slave_addr,
									uint8_t* p_buffer, 
									uint32_t buffer_len	);

/*****************************************************************************
 * 函 数 名  : master_reg_byte_read
 * 负 责 人  : fz
 * 创建日期  : 2023年5月15日
 * 函数功能  : i2c的master读功能
 * 输入参数  : uint32_t slave_addr  	slave地址
 				uint8_t reg_address,  	寄存器地址 				
 				uint32_t buffer_len 	要读出的数据的长度
 * 输出参数  : uint8_t* p_buffer		读出数据时的buffer
 * 返 回 值  : 无
 * 调用关系  : 外部接口
 * 其    它  : 无

*****************************************************************************/
extern void master_reg_byte_read(I2C_ALL_ADDRESS_INFO *p_address_info,uint32_t read_addr,
							uint8_t* p_buffer, 
							uint32_t buffer_len);

/*****************************************************************************
 * 函 数 名  : master_reg_1byte_size_read
 * 负 责 人  : fz
 * 创建日期  : 2023年5月15日
 * 函数功能  : i2c的master的单字节寄存器读功能
 * 输入参数  : uint32_t slave_addr  slave地址
 				uint8_t	reg	是寄存器 				
 				uint32_t buffer_len 数据的长度
 * 输出参数  : uint8_t *p_buffer  要读的的buffer
 * 返 回 值  : 无
 * 调用关系  : 外部接口
 * 其    它  : 无

*****************************************************************************/
extern void master_reg_1byte_size_read(uint32_t slave_address,uint8_t reg,uint8_t *p_buffer,
	uint32_t buffer_len);

/*****************************************************************************
 * 函 数 名  : master_reg_2byte_size_read
 * 负 责 人  : fz
 * 创建日期  : 2023年5月15日
 * 函数功能  : i2c的master的两字节寄存器读功能
 * 输入参数  : uint32_t slave_addr  slave地址
 				uint16_t	reg	是寄存器 				
 				uint32_t buffer_len 数据的长度
 * 输出参数  : uint8_t *p_buffer  要读的的buffer
 * 返 回 值  : 无
 * 调用关系  : 外部接口
 * 其    它  : 无

*****************************************************************************/
extern void master_reg_2byte_size_read(uint32_t slave_address,uint16_t reg,uint8_t *p_buffer,
	uint32_t buffer_len);


/*****************************************************************************
 * 函 数 名  : master_i2c_config_init
 * 负 责 人  : fz
 * 创建日期  : 2023年5月15日
 * 函数功能  : i2c的master配置初始化
 * 输入参数  : 无
 * 输出参数  : 无
 * 返 回 值  : 无
 * 调用关系  : 外部接口
 * 其    它  : 无

*****************************************************************************/
extern void master_i2c_config_init();




/*****************************************************************************
 * 函 数 名  : slave_i2c_config_init
 * 负 责 人  : fz
 * 创建日期  : 2023年5月15日
 * 函数功能  : i2c的slave配置初始化
 * 输入参数  : 无
 * 输出参数  : 无
 * 返 回 值  : 无
 * 调用关系  : 外部接口
 * 其    它  : 无

*****************************************************************************/
extern void slave_i2c_config_init();


/*****************************************************************************
 * 函 数 名  : i2c全局变量初始化
 * 负 责 人  : fangzhe
 * 创建日期  : 2025年3月23日
 * 函数功能  : i2c_global_param_init
 * 输入参数  : 无
 * 输出参数  : 无
 * 返 回 值  : 无
 * 调用关系  : 外部接口
 * 其    它  : 无

*****************************************************************************/
extern void i2c_global_param_init();


/*****************************************************************************
 * 函 数 名  : i2c_slave_func_register_read_callback
 * 负 责 人  : fangzhe
 * 创建日期  : 2025年3月21日
 * 函数功能  : slave i2c读注册
 * 输入参数  : uint32_t slave_address, 设备地址
            I2C_READ_CFG_CALLBACK read_callback  回调接口
 * 输出参数  : 无
 * 返 回 值  : 无
 * 调用关系  : 外部调用
 * 其    它  : 

*****************************************************************************/
extern void i2c_slave_func_register_read_callback(uint32_t 
	slave_address,I2C_READ_CFG_CALLBACK read_callback);


/*****************************************************************************
 * 函 数 名  : i2c_slave_func_register_write_callback
 * 负 责 人  : fangzhe
 * 创建日期  : 2025年3月21日
 * 函数功能  : slave i2c写注册
 * 输入参数  : uint32_t slave_address, 设备地址
            I2C_READ_CFG_CALLBACK read_callback  回调接口
 * 输出参数  : 无
 * 返 回 值  : 无
 * 调用关系  : 外部调用
 * 其    它  : 

*****************************************************************************/
extern void i2c_slave_func_register_write_callback(uint32_t 
			slave_address,I2C_WRITE_CFG_CALLBACK write_callback);


/*****************************************************************************
 * 函 数 名  : monitor_i2c_status_reg_read
 * 负 责 人  : fangzhe
 * 创建日期  : 2025年5月3日
 * 函数功能  : 读取i2c的工作状态
 * 输入参数  : 无
 * 输出参数  : 无
 * 返 回 值  : 
 * 调用关系  : 
 * 其    它  : 

*****************************************************************************/
void monitor_i2c_status_reg_read(uint8_t regaddr,uint8_t *pbuff,uint32_t bufflen);
#endif
