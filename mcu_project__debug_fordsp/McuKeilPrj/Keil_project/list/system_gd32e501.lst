	.text
	.syntax unified
	.eabi_attribute	67, "2.09"	@ Tag_conformance
	.cpu	cortex-m33
	.eabi_attribute	6, 17	@ Tag_CPU_arch
	.eabi_attribute	7, 77	@ Tag_CPU_arch_profile
	.eabi_attribute	8, 0	@ Tag_ARM_ISA_use
	.eabi_attribute	9, 3	@ Tag_THUMB_ISA_use
	.fpu	fpv5-sp-d16
	.eabi_attribute	27, 1	@ Tag_ABI_HardFP_use
	.eabi_attribute	36, 1	@ Tag_FP_HP_extension
	.eabi_attribute	34, 1	@ Tag_CPU_unaligned_access
	.eabi_attribute	17, 1	@ Tag_ABI_PCS_GOT_use
	.eabi_attribute	20, 2	@ Tag_ABI_FP_denormal
	.eabi_attribute	21, 0	@ Tag_ABI_FP_exceptions
	.eabi_attribute	23, 1	@ Tag_ABI_FP_number_model
	.eabi_attribute	24, 1	@ Tag_ABI_align_needed
	.eabi_attribute	25, 1	@ Tag_ABI_align_preserved
	.eabi_attribute	28, 1	@ Tag_ABI_VFP_args
	.eabi_attribute	38, 1	@ Tag_ABI_FP_16bit_format
	.eabi_attribute	18, 2	@ Tag_ABI_PCS_wchar_t
	.eabi_attribute	26, 1	@ Tag_ABI_enum_size
	.eabi_attribute	14, 0	@ Tag_ABI_PCS_R9_use
	.file	"system_gd32e501.c"
	.section	.text.SystemInit,"ax",%progbits
	.hidden	SystemInit                      @ -- Begin function SystemInit
	.globl	SystemInit
	.p2align	2
	.type	SystemInit,%function
	.code	16                              @ @SystemInit
	.thumb_func
SystemInit:
	.fnstart
	.cfi_sections .debug_frame
	.cfi_startproc
@ %bb.0:
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.pad	#8
	sub	sp, #8
	.cfi_def_cfa_offset 16
	movw	r1, #60808
	movt	r1, #57344
	ldr	r0, [r1]
	orr	r0, r0, #15728640
	str	r0, [r1]
	movw	r1, #4096
	movt	r1, #16386
	ldr	r0, [r1]
	orr	r0, r0, #1
	str	r0, [r1]
	b	.LBB0_1
.LBB0_1:                                @ =>This Inner Loop Header: Depth=1
	movw	r0, #4096
	movt	r0, #16386
	ldr	r0, [r0]
	lsls	r0, r0, #30
	cmp	r0, #0
	bmi	.LBB0_3
	b	.LBB0_2
.LBB0_2:                                @   in Loop: Header=BB0_1 Depth=1
	b	.LBB0_1
.LBB0_3:
	b	.LBB0_4
.LBB0_4:
	movw	r1, #4100
	movt	r1, #16386
	ldr	r0, [r1]
	orr	r0, r0, #128
	str	r0, [r1]
	movs	r0, #0
	str	r0, [sp, #4]
	b	.LBB0_5
.LBB0_5:                                @ =>This Inner Loop Header: Depth=1
	ldr	r0, [sp, #4]
	cmp	r0, #79
	bhi	.LBB0_8
	b	.LBB0_6
.LBB0_6:                                @   in Loop: Header=BB0_5 Depth=1
	b	.LBB0_7
.LBB0_7:                                @   in Loop: Header=BB0_5 Depth=1
	ldr	r0, [sp, #4]
	adds	r0, #1
	str	r0, [sp, #4]
	b	.LBB0_5
.LBB0_8:
	movw	r1, #4100
	movt	r1, #16386
	ldr	r0, [r1]
	orr	r0, r0, #144
	str	r0, [r1]
	movs	r0, #0
	str	r0, [sp, #4]
	b	.LBB0_9
.LBB0_9:                                @ =>This Inner Loop Header: Depth=1
	ldr	r0, [sp, #4]
	cmp	r0, #79
	bhi	.LBB0_12
	b	.LBB0_10
.LBB0_10:                               @   in Loop: Header=BB0_9 Depth=1
	b	.LBB0_11
.LBB0_11:                               @   in Loop: Header=BB0_9 Depth=1
	ldr	r0, [sp, #4]
	adds	r0, #1
	str	r0, [sp, #4]
	b	.LBB0_9
.LBB0_12:
	b	.LBB0_13
.LBB0_13:
	movw	r3, #4100
	movt	r3, #16386
	ldr	r0, [r3]
	bic	r0, r0, #3
	str	r0, [r3]
	movw	r1, #4096
	movt	r1, #16386
	ldr	r0, [r1]
	movw	r2, #65535
	movt	r2, #65266
	ands	r0, r2
	str	r0, [r1]
	ldr	r0, [r3]
	movw	r12, #12
	movt	r12, #2303
	and.w	r0, r0, r12
	str	r0, [r3]
	ldr	r0, [r3]
	movw	r12, #65535
	movt	r12, #63424
	and.w	r0, r0, r12
	str	r0, [r3]
	ldr	r0, [r1]
	ands	r0, r2
	str	r0, [r1]
	movw	r1, #4140
	movt	r1, #16386
	ldr	r0, [r1]
	bic	r0, r0, #15
	str	r0, [r1]
	movw	r1, #4144
	movt	r1, #16386
	ldr	r0, [r1]
	movw	r2, #511
	bics	r0, r2
	str	r0, [r1]
	ldr	r0, [r1]
	bic	r0, r0, #65536
	str	r0, [r1]
	ldr	r0, [r1]
	bic	r0, r0, #-2147483648
	str	r0, [r1]
	movw	r1, #4148
	movt	r1, #16386
	ldr	r0, [r1]
	bic	r0, r0, #1
	str	r0, [r1]
	movw	r1, #4104
	movt	r1, #16386
	movs	r0, #0
	str	r0, [sp]                        @ 4-byte Spill
	str	r0, [r1]
	bl	system_clock_config
	ldr	r1, [sp]                        @ 4-byte Reload
	mov.w	r0, #134217728
	bl	nvic_vector_table_set
	add	sp, #8
	pop	{r7, pc}
.Lfunc_end0:
	.size	SystemInit, .Lfunc_end0-SystemInit
	.cfi_endproc
	.cantunwind
	.fnend
                                        @ -- End function
	.section	.text.system_clock_config,"ax",%progbits
	.p2align	2                               @ -- Begin function system_clock_config
	.type	system_clock_config,%function
	.code	16                              @ @system_clock_config
	.thumb_func
system_clock_config:
	.fnstart
	.cfi_startproc
@ %bb.0:
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	bl	system_clock_100m_irc8m
	pop	{r7, pc}
.Lfunc_end1:
	.size	system_clock_config, .Lfunc_end1-system_clock_config
	.cfi_endproc
	.cantunwind
	.fnend
                                        @ -- End function
	.section	.text.SystemCoreClockUpdate,"ax",%progbits
	.hidden	SystemCoreClockUpdate           @ -- Begin function SystemCoreClockUpdate
	.globl	SystemCoreClockUpdate
	.p2align	2
	.type	SystemCoreClockUpdate,%function
	.code	16                              @ @SystemCoreClockUpdate
	.thumb_func
SystemCoreClockUpdate:
	.fnstart
	.cfi_startproc
@ %bb.0:
	.pad	#52
	sub	sp, #52
	.cfi_def_cfa_offset 52
	movs	r0, #0
	str	r0, [sp]                        @ 4-byte Spill
	str	r0, [sp, #48]
	str	r0, [sp, #44]
	str	r0, [sp, #40]
	str	r0, [sp, #36]
	str	r0, [sp, #32]
	str	r0, [sp, #28]
	movw	r1, #1798
	movt	r1, #2312
	str	r1, [sp, #24]
	movw	r1, #513
	movt	r1, #1027
	str	r1, [sp, #20]
	str	r0, [sp, #16]
	str	r0, [sp, #12]
	movw	r0, #4100
	movt	r0, #16386
	ldr	r0, [r0]
	ubfx	r0, r0, #2, #2
	str	r0, [sp, #48]
	ldr	r0, [sp, #48]
	str	r0, [sp, #4]                    @ 4-byte Spill
	cbz	r0, .LBB2_3
	b	.LBB2_1
.LBB2_1:
	ldr	r0, [sp, #4]                    @ 4-byte Reload
	cmp	r0, #1
	beq	.LBB2_4
	b	.LBB2_2
.LBB2_2:
	ldr	r0, [sp, #4]                    @ 4-byte Reload
	cmp	r0, #2
	beq	.LBB2_5
	b	.LBB2_15
.LBB2_3:
	movw	r1, :lower16:SystemCoreClock
	movt	r1, :upper16:SystemCoreClock
	movw	r0, #4608
	movt	r0, #122
	str	r0, [r1]
	b	.LBB2_16
.LBB2_4:
	movw	r1, :lower16:SystemCoreClock
	movt	r1, :upper16:SystemCoreClock
	movw	r0, #4608
	movt	r0, #122
	str	r0, [r1]
	b	.LBB2_16
.LBB2_5:
	movw	r0, #4100
	movt	r0, #16386
	ldr	r1, [r0]
	ubfx	r1, r1, #18, #4
	str	r1, [sp, #44]
	ldr	r0, [r0]
	ubfx	r0, r0, #27, #1
	str	r0, [sp, #40]
	ldr	r0, [sp, #40]
	cmp	r0, #1
	bne	.LBB2_7
	b	.LBB2_6
.LBB2_6:
	ldr	r0, [sp, #44]
	adds	r0, #17
	str	r0, [sp, #44]
	b	.LBB2_11
.LBB2_7:
	ldr	r0, [sp, #44]
	cmp	r0, #15
	bne	.LBB2_9
	b	.LBB2_8
.LBB2_8:
	movs	r0, #16
	str	r0, [sp, #44]
	b	.LBB2_10
.LBB2_9:
	ldr	r0, [sp, #44]
	adds	r0, #2
	str	r0, [sp, #44]
	b	.LBB2_10
.LBB2_10:
	b	.LBB2_11
.LBB2_11:
	movw	r0, #4100
	movt	r0, #16386
	ldr	r0, [r0]
	ubfx	r0, r0, #16, #1
	str	r0, [sp, #36]
	ldr	r0, [sp, #36]
	cbz	r0, .LBB2_13
	b	.LBB2_12
.LBB2_12:
	movw	r0, #4140
	movt	r0, #16386
	ldr	r0, [r0]
	and	r0, r0, #15
	adds	r0, #1
	str	r0, [sp, #8]
	ldr	r1, [sp, #8]
	movw	r0, #4608
	movt	r0, #122
	udiv	r0, r0, r1
	ldr	r1, [sp, #44]
	mul	r0, r0, r1
	movw	r1, :lower16:SystemCoreClock
	movt	r1, :upper16:SystemCoreClock
	str	r0, [r1]
	b	.LBB2_14
.LBB2_13:
	ldr	r0, [sp, #44]
	movw	r1, #2304
	movt	r1, #61
	mul	r0, r0, r1
	movw	r1, :lower16:SystemCoreClock
	movt	r1, :upper16:SystemCoreClock
	str	r0, [r1]
	b	.LBB2_14
.LBB2_14:
	b	.LBB2_16
.LBB2_15:
	movw	r1, :lower16:SystemCoreClock
	movt	r1, :upper16:SystemCoreClock
	movw	r0, #4608
	movt	r0, #122
	str	r0, [r1]
	b	.LBB2_16
.LBB2_16:
	movw	r0, #4100
	movt	r0, #16386
	ldr	r0, [r0]
	uxtb	r0, r0
	lsrs	r0, r0, #4
	str	r0, [sp, #32]
	ldr	r1, [sp, #32]
	add	r0, sp, #12
	ldrb	r0, [r0, r1]
	str	r0, [sp, #28]
	ldr	r2, [sp, #28]
	movw	r1, :lower16:SystemCoreClock
	movt	r1, :upper16:SystemCoreClock
	ldr	r0, [r1]
	lsrs	r0, r2
	str	r0, [r1]
	add	sp, #52
	bx	lr
.Lfunc_end2:
	.size	SystemCoreClockUpdate, .Lfunc_end2-SystemCoreClockUpdate
	.cfi_endproc
	.cantunwind
	.fnend
                                        @ -- End function
	.section	.text.system_clock_100m_irc8m,"ax",%progbits
	.p2align	2                               @ -- Begin function system_clock_100m_irc8m
	.type	system_clock_100m_irc8m,%function
	.code	16                              @ @system_clock_100m_irc8m
	.thumb_func
system_clock_100m_irc8m:
	.fnstart
	.cfi_startproc
@ %bb.0:
	.pad	#16
	sub	sp, #16
	.cfi_def_cfa_offset 16
	movs	r0, #0
	str	r0, [sp, #12]
	str	r0, [sp, #8]
	movw	r1, #4096
	movt	r1, #16386
	ldr	r0, [r1]
	orr	r0, r0, #1
	str	r0, [r1]
	b	.LBB3_1
.LBB3_1:                                @ =>This Inner Loop Header: Depth=1
	ldr	r0, [sp, #12]
	adds	r0, #1
	str	r0, [sp, #12]
	movw	r0, #4096
	movt	r0, #16386
	ldr	r0, [r0]
	and	r0, r0, #2
	str	r0, [sp, #8]
	b	.LBB3_2
.LBB3_2:                                @   in Loop: Header=BB3_1 Depth=1
	ldr	r1, [sp, #8]
	movs	r0, #0
	str	r0, [sp, #4]                    @ 4-byte Spill
	cbnz	r1, .LBB3_4
	b	.LBB3_3
.LBB3_3:                                @   in Loop: Header=BB3_1 Depth=1
	ldr	r0, [sp, #12]
	subs.w	r0, r0, #1280
	it	ne
	movne	r0, #1
	str	r0, [sp, #4]                    @ 4-byte Spill
	b	.LBB3_4
.LBB3_4:                                @   in Loop: Header=BB3_1 Depth=1
	ldr	r0, [sp, #4]                    @ 4-byte Reload
	lsls	r0, r0, #31
	cmp	r0, #0
	bne	.LBB3_1
	b	.LBB3_5
.LBB3_5:
	movw	r0, #4096
	movt	r0, #16386
	ldr	r0, [r0]
	lsls	r0, r0, #30
	cmp	r0, #0
	bmi	.LBB3_8
	b	.LBB3_6
.LBB3_6:
	b	.LBB3_7
.LBB3_7:                                @ =>This Inner Loop Header: Depth=1
	b	.LBB3_7
.LBB3_8:
	movw	r1, #8192
	movt	r1, #16386
	ldr	r0, [r1]
	movs	r2, #4
	bfi	r0, r2, #0, #3
	str	r0, [r1]
	movw	r1, #4100
	movt	r1, #16386
	str	r1, [sp]                        @ 4-byte Spill
	ldr	r0, [r1]
	str	r0, [r1]
	ldr	r0, [r1]
	str	r0, [r1]
	ldr	r0, [r1]
	str	r0, [r1]
	ldr	r0, [r1]
	movw	r2, #65535
	movt	r2, #63426
	ands	r0, r2
	str	r0, [r1]
	ldr	r0, [r1]
	orr	r0, r0, #136314880
	str	r0, [r1]
	movw	r1, #4096
	movt	r1, #16386
	ldr	r0, [r1]
	orr	r0, r0, #16777216
	str	r0, [r1]
	b	.LBB3_9
.LBB3_9:                                @ =>This Inner Loop Header: Depth=1
	movw	r0, #4096
	movt	r0, #16386
	ldr	r0, [r0]
	lsls	r0, r0, #6
	cmp	r0, #0
	bmi	.LBB3_11
	b	.LBB3_10
.LBB3_10:                               @   in Loop: Header=BB3_9 Depth=1
	b	.LBB3_9
.LBB3_11:
	movw	r1, #4100
	movt	r1, #16386
	ldr	r0, [r1]
	bic	r0, r0, #3
	str	r0, [r1]
	ldr	r0, [r1]
	orr	r0, r0, #2
	str	r0, [r1]
	b	.LBB3_12
.LBB3_12:                               @ =>This Inner Loop Header: Depth=1
	movw	r0, #4100
	movt	r0, #16386
	ldr	r0, [r0]
	lsls	r0, r0, #28
	cmp	r0, #0
	bmi	.LBB3_14
	b	.LBB3_13
.LBB3_13:                               @   in Loop: Header=BB3_12 Depth=1
	b	.LBB3_12
.LBB3_14:
	add	sp, #16
	bx	lr
.Lfunc_end3:
	.size	system_clock_100m_irc8m, .Lfunc_end3-system_clock_100m_irc8m
	.cfi_endproc
	.cantunwind
	.fnend
                                        @ -- End function
	.hidden	SystemCoreClock                 @ @SystemCoreClock
	.type	SystemCoreClock,%object
	.section	.data.SystemCoreClock,"aw",%progbits
	.globl	SystemCoreClock
	.p2align	2, 0x0
SystemCoreClock:
	.long	100000000                       @ 0x5f5e100
	.size	SystemCoreClock, 4

	.type	.L__const.SystemCoreClockUpdate.ahb_exp,%object @ @__const.SystemCoreClockUpdate.ahb_exp
	.section	.rodata.cst16,"aM",%progbits,16
.L__const.SystemCoreClockUpdate.ahb_exp:
	.ascii	"\000\000\000\000\000\000\000\000\001\002\003\004\006\007\b\t"
	.size	.L__const.SystemCoreClockUpdate.ahb_exp, 16

	.ident	"Component: Arm Compiler for Embedded 6.19 Tool: armclang [5e73cb00]"
	.section	".note.GNU-stack","",%progbits
	.eabi_attribute	30, 6	@ Tag_ABI_optimization_goals
	.ARM_attribute	16, 1	@ Tag_AV_eba
