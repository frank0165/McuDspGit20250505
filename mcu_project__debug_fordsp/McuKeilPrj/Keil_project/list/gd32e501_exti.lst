	.text
	.syntax unified
	.eabi_attribute	67, "2.09"	@ Tag_conformance
	.cpu	cortex-m33
	.eabi_attribute	6, 17	@ Tag_CPU_arch
	.eabi_attribute	7, 77	@ Tag_CPU_arch_profile
	.eabi_attribute	8, 0	@ Tag_ARM_ISA_use
	.eabi_attribute	9, 3	@ Tag_THUMB_ISA_use
	.fpu	fpv5-sp-d16
	.eabi_attribute	27, 1	@ Tag_ABI_HardFP_use
	.eabi_attribute	36, 1	@ Tag_FP_HP_extension
	.eabi_attribute	34, 1	@ Tag_CPU_unaligned_access
	.eabi_attribute	17, 1	@ Tag_ABI_PCS_GOT_use
	.eabi_attribute	20, 2	@ Tag_ABI_FP_denormal
	.eabi_attribute	21, 0	@ Tag_ABI_FP_exceptions
	.eabi_attribute	23, 1	@ Tag_ABI_FP_number_model
	.eabi_attribute	24, 1	@ Tag_ABI_align_needed
	.eabi_attribute	25, 1	@ Tag_ABI_align_preserved
	.eabi_attribute	28, 1	@ Tag_ABI_VFP_args
	.eabi_attribute	38, 1	@ Tag_ABI_FP_16bit_format
	.eabi_attribute	18, 2	@ Tag_ABI_PCS_wchar_t
	.eabi_attribute	26, 1	@ Tag_ABI_enum_size
	.eabi_attribute	14, 0	@ Tag_ABI_PCS_R9_use
	.file	"gd32e501_exti.c"
	.section	.text.exti_deinit,"ax",%progbits
	.hidden	exti_deinit                     @ -- Begin function exti_deinit
	.globl	exti_deinit
	.p2align	2
	.type	exti_deinit,%function
	.code	16                              @ @exti_deinit
	.thumb_func
exti_deinit:
	.fnstart
	.cfi_sections .debug_frame
	.cfi_startproc
@ %bb.0:
	movw	r1, #1024
	movt	r1, #16385
	movs	r0, #0
	movt	r0, #3988
	str	r0, [r1]
	movw	r1, #1028
	movt	r1, #16385
	movs	r0, #0
	str	r0, [r1]
	movw	r1, #1032
	movt	r1, #16385
	str	r0, [r1]
	movw	r1, #1036
	movt	r1, #16385
	str	r0, [r1]
	movw	r1, #1040
	movt	r1, #16385
	str	r0, [r1]
	bx	lr
.Lfunc_end0:
	.size	exti_deinit, .Lfunc_end0-exti_deinit
	.cfi_endproc
	.cantunwind
	.fnend
                                        @ -- End function
	.section	.text.exti_init,"ax",%progbits
	.hidden	exti_init                       @ -- Begin function exti_init
	.globl	exti_init
	.p2align	2
	.type	exti_init,%function
	.code	16                              @ @exti_init
	.thumb_func
exti_init:
	.fnstart
	.cfi_startproc
@ %bb.0:
	.pad	#16
	sub	sp, #16
	.cfi_def_cfa_offset 16
                                        @ kill: def $r3 killed $r2
                                        @ kill: def $r3 killed $r1
	str	r0, [sp, #12]
	strb.w	r1, [sp, #11]
	strb.w	r2, [sp, #10]
	ldr	r2, [sp, #12]
	movw	r1, #1024
	movt	r1, #16385
	ldr	r0, [r1]
	bics	r0, r2
	str	r0, [r1]
	ldr	r2, [sp, #12]
	movw	r1, #1028
	movt	r1, #16385
	ldr	r0, [r1]
	bics	r0, r2
	str	r0, [r1]
	ldr	r2, [sp, #12]
	movw	r1, #1032
	movt	r1, #16385
	ldr	r0, [r1]
	bics	r0, r2
	str	r0, [r1]
	ldr	r2, [sp, #12]
	movw	r1, #1036
	movt	r1, #16385
	ldr	r0, [r1]
	bics	r0, r2
	str	r0, [r1]
	ldrb.w	r0, [sp, #11]
	mov	r1, r0
	str	r1, [sp, #4]                    @ 4-byte Spill
	cbz	r0, .LBB1_2
	b	.LBB1_1
.LBB1_1:
	ldr	r0, [sp, #4]                    @ 4-byte Reload
	cmp	r0, #1
	beq	.LBB1_3
	b	.LBB1_4
.LBB1_2:
	ldr	r2, [sp, #12]
	movw	r1, #1024
	movt	r1, #16385
	ldr	r0, [r1]
	orrs	r0, r2
	str	r0, [r1]
	b	.LBB1_5
.LBB1_3:
	ldr	r2, [sp, #12]
	movw	r1, #1028
	movt	r1, #16385
	ldr	r0, [r1]
	orrs	r0, r2
	str	r0, [r1]
	b	.LBB1_5
.LBB1_4:
	b	.LBB1_5
.LBB1_5:
	ldrb.w	r0, [sp, #10]
	mov	r1, r0
	str	r1, [sp]                        @ 4-byte Spill
	cmp	r0, #3
	bhi	.LBB1_12
@ %bb.6:
	ldr	r1, [sp]                        @ 4-byte Reload
.LCPI1_0:
	tbb	[pc, r1]
@ %bb.7:
.LJTI1_0:
	.byte	(.LBB1_8-(.LCPI1_0+4))/2
	.byte	(.LBB1_9-(.LCPI1_0+4))/2
	.byte	(.LBB1_10-(.LCPI1_0+4))/2
	.byte	(.LBB1_11-(.LCPI1_0+4))/2
	.p2align	1
.LBB1_8:
	ldr	r2, [sp, #12]
	movw	r1, #1032
	movt	r1, #16385
	ldr	r0, [r1]
	orrs	r0, r2
	str	r0, [r1]
	ldr	r2, [sp, #12]
	movw	r1, #1036
	movt	r1, #16385
	ldr	r0, [r1]
	bics	r0, r2
	str	r0, [r1]
	b	.LBB1_13
.LBB1_9:
	ldr	r2, [sp, #12]
	movw	r1, #1032
	movt	r1, #16385
	ldr	r0, [r1]
	bics	r0, r2
	str	r0, [r1]
	ldr	r2, [sp, #12]
	movw	r1, #1036
	movt	r1, #16385
	ldr	r0, [r1]
	orrs	r0, r2
	str	r0, [r1]
	b	.LBB1_13
.LBB1_10:
	ldr	r2, [sp, #12]
	movw	r1, #1032
	movt	r1, #16385
	ldr	r0, [r1]
	orrs	r0, r2
	str	r0, [r1]
	ldr	r2, [sp, #12]
	movw	r1, #1036
	movt	r1, #16385
	ldr	r0, [r1]
	orrs	r0, r2
	str	r0, [r1]
	b	.LBB1_13
.LBB1_11:
	b	.LBB1_12
.LBB1_12:
	b	.LBB1_13
.LBB1_13:
	add	sp, #16
	bx	lr
.Lfunc_end1:
	.size	exti_init, .Lfunc_end1-exti_init
	.cfi_endproc
	.cantunwind
	.fnend
                                        @ -- End function
	.section	.text.exti_interrupt_enable,"ax",%progbits
	.hidden	exti_interrupt_enable           @ -- Begin function exti_interrupt_enable
	.globl	exti_interrupt_enable
	.p2align	2
	.type	exti_interrupt_enable,%function
	.code	16                              @ @exti_interrupt_enable
	.thumb_func
exti_interrupt_enable:
	.fnstart
	.cfi_startproc
@ %bb.0:
	.pad	#4
	sub	sp, #4
	.cfi_def_cfa_offset 4
	str	r0, [sp]
	ldr	r2, [sp]
	movw	r1, #1024
	movt	r1, #16385
	ldr	r0, [r1]
	orrs	r0, r2
	str	r0, [r1]
	add	sp, #4
	bx	lr
.Lfunc_end2:
	.size	exti_interrupt_enable, .Lfunc_end2-exti_interrupt_enable
	.cfi_endproc
	.cantunwind
	.fnend
                                        @ -- End function
	.section	.text.exti_interrupt_disable,"ax",%progbits
	.hidden	exti_interrupt_disable          @ -- Begin function exti_interrupt_disable
	.globl	exti_interrupt_disable
	.p2align	2
	.type	exti_interrupt_disable,%function
	.code	16                              @ @exti_interrupt_disable
	.thumb_func
exti_interrupt_disable:
	.fnstart
	.cfi_startproc
@ %bb.0:
	.pad	#4
	sub	sp, #4
	.cfi_def_cfa_offset 4
	str	r0, [sp]
	ldr	r2, [sp]
	movw	r1, #1024
	movt	r1, #16385
	ldr	r0, [r1]
	bics	r0, r2
	str	r0, [r1]
	add	sp, #4
	bx	lr
.Lfunc_end3:
	.size	exti_interrupt_disable, .Lfunc_end3-exti_interrupt_disable
	.cfi_endproc
	.cantunwind
	.fnend
                                        @ -- End function
	.section	.text.exti_event_enable,"ax",%progbits
	.hidden	exti_event_enable               @ -- Begin function exti_event_enable
	.globl	exti_event_enable
	.p2align	2
	.type	exti_event_enable,%function
	.code	16                              @ @exti_event_enable
	.thumb_func
exti_event_enable:
	.fnstart
	.cfi_startproc
@ %bb.0:
	.pad	#4
	sub	sp, #4
	.cfi_def_cfa_offset 4
	str	r0, [sp]
	ldr	r2, [sp]
	movw	r1, #1028
	movt	r1, #16385
	ldr	r0, [r1]
	orrs	r0, r2
	str	r0, [r1]
	add	sp, #4
	bx	lr
.Lfunc_end4:
	.size	exti_event_enable, .Lfunc_end4-exti_event_enable
	.cfi_endproc
	.cantunwind
	.fnend
                                        @ -- End function
	.section	.text.exti_event_disable,"ax",%progbits
	.hidden	exti_event_disable              @ -- Begin function exti_event_disable
	.globl	exti_event_disable
	.p2align	2
	.type	exti_event_disable,%function
	.code	16                              @ @exti_event_disable
	.thumb_func
exti_event_disable:
	.fnstart
	.cfi_startproc
@ %bb.0:
	.pad	#4
	sub	sp, #4
	.cfi_def_cfa_offset 4
	str	r0, [sp]
	ldr	r2, [sp]
	movw	r1, #1028
	movt	r1, #16385
	ldr	r0, [r1]
	bics	r0, r2
	str	r0, [r1]
	add	sp, #4
	bx	lr
.Lfunc_end5:
	.size	exti_event_disable, .Lfunc_end5-exti_event_disable
	.cfi_endproc
	.cantunwind
	.fnend
                                        @ -- End function
	.section	.text.exti_software_interrupt_enable,"ax",%progbits
	.hidden	exti_software_interrupt_enable  @ -- Begin function exti_software_interrupt_enable
	.globl	exti_software_interrupt_enable
	.p2align	2
	.type	exti_software_interrupt_enable,%function
	.code	16                              @ @exti_software_interrupt_enable
	.thumb_func
exti_software_interrupt_enable:
	.fnstart
	.cfi_startproc
@ %bb.0:
	.pad	#4
	sub	sp, #4
	.cfi_def_cfa_offset 4
	str	r0, [sp]
	ldr	r2, [sp]
	movw	r1, #1040
	movt	r1, #16385
	ldr	r0, [r1]
	orrs	r0, r2
	str	r0, [r1]
	add	sp, #4
	bx	lr
.Lfunc_end6:
	.size	exti_software_interrupt_enable, .Lfunc_end6-exti_software_interrupt_enable
	.cfi_endproc
	.cantunwind
	.fnend
                                        @ -- End function
	.section	.text.exti_software_interrupt_disable,"ax",%progbits
	.hidden	exti_software_interrupt_disable @ -- Begin function exti_software_interrupt_disable
	.globl	exti_software_interrupt_disable
	.p2align	2
	.type	exti_software_interrupt_disable,%function
	.code	16                              @ @exti_software_interrupt_disable
	.thumb_func
exti_software_interrupt_disable:
	.fnstart
	.cfi_startproc
@ %bb.0:
	.pad	#4
	sub	sp, #4
	.cfi_def_cfa_offset 4
	str	r0, [sp]
	ldr	r2, [sp]
	movw	r1, #1040
	movt	r1, #16385
	ldr	r0, [r1]
	bics	r0, r2
	str	r0, [r1]
	add	sp, #4
	bx	lr
.Lfunc_end7:
	.size	exti_software_interrupt_disable, .Lfunc_end7-exti_software_interrupt_disable
	.cfi_endproc
	.cantunwind
	.fnend
                                        @ -- End function
	.section	.text.exti_flag_get,"ax",%progbits
	.hidden	exti_flag_get                   @ -- Begin function exti_flag_get
	.globl	exti_flag_get
	.p2align	2
	.type	exti_flag_get,%function
	.code	16                              @ @exti_flag_get
	.thumb_func
exti_flag_get:
	.fnstart
	.cfi_startproc
@ %bb.0:
	.pad	#8
	sub	sp, #8
	.cfi_def_cfa_offset 8
	str	r0, [sp]
	movw	r0, #1044
	movt	r0, #16385
	ldr	r0, [r0]
	ldr	r1, [sp]
	tst	r0, r1
	beq	.LBB8_2
	b	.LBB8_1
.LBB8_1:
	movs	r0, #1
	strb.w	r0, [sp, #7]
	b	.LBB8_3
.LBB8_2:
	movs	r0, #0
	strb.w	r0, [sp, #7]
	b	.LBB8_3
.LBB8_3:
	ldrb.w	r0, [sp, #7]
	add	sp, #8
	bx	lr
.Lfunc_end8:
	.size	exti_flag_get, .Lfunc_end8-exti_flag_get
	.cfi_endproc
	.cantunwind
	.fnend
                                        @ -- End function
	.section	.text.exti_flag_clear,"ax",%progbits
	.hidden	exti_flag_clear                 @ -- Begin function exti_flag_clear
	.globl	exti_flag_clear
	.p2align	2
	.type	exti_flag_clear,%function
	.code	16                              @ @exti_flag_clear
	.thumb_func
exti_flag_clear:
	.fnstart
	.cfi_startproc
@ %bb.0:
	.pad	#4
	sub	sp, #4
	.cfi_def_cfa_offset 4
	str	r0, [sp]
	ldr	r0, [sp]
	movw	r1, #1044
	movt	r1, #16385
	str	r0, [r1]
	add	sp, #4
	bx	lr
.Lfunc_end9:
	.size	exti_flag_clear, .Lfunc_end9-exti_flag_clear
	.cfi_endproc
	.cantunwind
	.fnend
                                        @ -- End function
	.section	.text.exti_interrupt_flag_get,"ax",%progbits
	.hidden	exti_interrupt_flag_get         @ -- Begin function exti_interrupt_flag_get
	.globl	exti_interrupt_flag_get
	.p2align	2
	.type	exti_interrupt_flag_get,%function
	.code	16                              @ @exti_interrupt_flag_get
	.thumb_func
exti_interrupt_flag_get:
	.fnstart
	.cfi_startproc
@ %bb.0:
	.pad	#16
	sub	sp, #16
	.cfi_def_cfa_offset 16
	str	r0, [sp, #8]
	movw	r0, #1044
	movt	r0, #16385
	ldr	r0, [r0]
	ldr	r1, [sp, #8]
	ands	r0, r1
	str	r0, [sp, #4]
	movw	r0, #1024
	movt	r0, #16385
	ldr	r0, [r0]
	ldr	r1, [sp, #8]
	ands	r0, r1
	str	r0, [sp]
	ldr	r0, [sp, #4]
	cbz	r0, .LBB10_3
	b	.LBB10_1
.LBB10_1:
	ldr	r0, [sp]
	cbz	r0, .LBB10_3
	b	.LBB10_2
.LBB10_2:
	movs	r0, #1
	strb.w	r0, [sp, #15]
	b	.LBB10_4
.LBB10_3:
	movs	r0, #0
	strb.w	r0, [sp, #15]
	b	.LBB10_4
.LBB10_4:
	ldrb.w	r0, [sp, #15]
	add	sp, #16
	bx	lr
.Lfunc_end10:
	.size	exti_interrupt_flag_get, .Lfunc_end10-exti_interrupt_flag_get
	.cfi_endproc
	.cantunwind
	.fnend
                                        @ -- End function
	.section	.text.exti_interrupt_flag_clear,"ax",%progbits
	.hidden	exti_interrupt_flag_clear       @ -- Begin function exti_interrupt_flag_clear
	.globl	exti_interrupt_flag_clear
	.p2align	2
	.type	exti_interrupt_flag_clear,%function
	.code	16                              @ @exti_interrupt_flag_clear
	.thumb_func
exti_interrupt_flag_clear:
	.fnstart
	.cfi_startproc
@ %bb.0:
	.pad	#4
	sub	sp, #4
	.cfi_def_cfa_offset 4
	str	r0, [sp]
	ldr	r0, [sp]
	movw	r1, #1044
	movt	r1, #16385
	str	r0, [r1]
	add	sp, #4
	bx	lr
.Lfunc_end11:
	.size	exti_interrupt_flag_clear, .Lfunc_end11-exti_interrupt_flag_clear
	.cfi_endproc
	.cantunwind
	.fnend
                                        @ -- End function
	.ident	"Component: Arm Compiler for Embedded 6.19 Tool: armclang [5e73cb00]"
	.section	".note.GNU-stack","",%progbits
	.eabi_attribute	30, 6	@ Tag_ABI_optimization_goals
	.ARM_attribute	16, 1	@ Tag_AV_eba
