	.text
	.syntax unified
	.eabi_attribute	67, "2.09"	@ Tag_conformance
	.cpu	cortex-m33
	.eabi_attribute	6, 17	@ Tag_CPU_arch
	.eabi_attribute	7, 77	@ Tag_CPU_arch_profile
	.eabi_attribute	8, 0	@ Tag_ARM_ISA_use
	.eabi_attribute	9, 3	@ Tag_THUMB_ISA_use
	.fpu	fpv5-sp-d16
	.eabi_attribute	27, 1	@ Tag_ABI_HardFP_use
	.eabi_attribute	36, 1	@ Tag_FP_HP_extension
	.eabi_attribute	34, 1	@ Tag_CPU_unaligned_access
	.eabi_attribute	17, 1	@ Tag_ABI_PCS_GOT_use
	.eabi_attribute	20, 2	@ Tag_ABI_FP_denormal
	.eabi_attribute	21, 0	@ Tag_ABI_FP_exceptions
	.eabi_attribute	23, 1	@ Tag_ABI_FP_number_model
	.eabi_attribute	24, 1	@ Tag_ABI_align_needed
	.eabi_attribute	25, 1	@ Tag_ABI_align_preserved
	.eabi_attribute	28, 1	@ Tag_ABI_VFP_args
	.eabi_attribute	38, 1	@ Tag_ABI_FP_16bit_format
	.eabi_attribute	18, 2	@ Tag_ABI_PCS_wchar_t
	.eabi_attribute	26, 1	@ Tag_ABI_enum_size
	.eabi_attribute	14, 0	@ Tag_ABI_PCS_R9_use
	.file	"tec_i2c_interface.c"
	.section	.text.tec_i2c_vtec_ctl_reg_write,"ax",%progbits
	.hidden	tec_i2c_vtec_ctl_reg_write      @ -- Begin function tec_i2c_vtec_ctl_reg_write
	.globl	tec_i2c_vtec_ctl_reg_write
	.p2align	2
	.type	tec_i2c_vtec_ctl_reg_write,%function
	.code	16                              @ @tec_i2c_vtec_ctl_reg_write
	.thumb_func
tec_i2c_vtec_ctl_reg_write:
	.fnstart
	.cfi_sections .debug_frame
	.cfi_startproc
@ %bb.0:
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.pad	#16
	sub	sp, #16
	.cfi_def_cfa_offset 24
	str	r0, [sp, #12]
	str	r1, [sp, #8]
	movs	r0, #0
	strh.w	r0, [sp, #6]
	ldr	r0, [sp, #12]
	cbz	r0, .LBB0_2
	b	.LBB0_1
.LBB0_1:
	ldr	r0, [sp, #8]
	cmp	r0, #2
	bhi	.LBB0_3
	b	.LBB0_2
.LBB0_2:
	b	.LBB0_6
.LBB0_3:
	ldr	r0, [sp, #12]
	ldrb	r0, [r0]
	cbz	r0, .LBB0_5
	b	.LBB0_4
.LBB0_4:
	b	.LBB0_6
.LBB0_5:
	ldr	r0, [sp, #12]
	adds	r0, #1
	bl	get_u16
	strh.w	r0, [sp, #6]
	ldrh.w	r0, [sp, #6]
	vmov	s0, r0
	vcvt.f32.u32	s0, s0
	movw	r0, :lower16:g_tec_vars_param
	movt	r0, :upper16:g_tec_vars_param
	vstr	s0, [r0]
	vldr	s0, [r0]
	vldr	s2, .LCPI0_0
	vdiv.f32	s0, s0, s2
	vstr	s0, [r0]
	vldr	s0, [r0]
	bl	tec_set_ctl_voltage
	b	.LBB0_6
.LBB0_6:
	add	sp, #16
	pop	{r7, pc}
	.p2align	2
@ %bb.7:
.LCPI0_0:
	.long	0x42c80000                      @ float 100
.Lfunc_end0:
	.size	tec_i2c_vtec_ctl_reg_write, .Lfunc_end0-tec_i2c_vtec_ctl_reg_write
	.cfi_endproc
	.cantunwind
	.fnend
                                        @ -- End function
	.section	.text.tec_i2c_vtec_ctl_reg_read,"ax",%progbits
	.hidden	tec_i2c_vtec_ctl_reg_read       @ -- Begin function tec_i2c_vtec_ctl_reg_read
	.globl	tec_i2c_vtec_ctl_reg_read
	.p2align	2
	.type	tec_i2c_vtec_ctl_reg_read,%function
	.code	16                              @ @tec_i2c_vtec_ctl_reg_read
	.thumb_func
tec_i2c_vtec_ctl_reg_read:
	.fnstart
	.cfi_startproc
@ %bb.0:
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.pad	#16
	sub	sp, #16
	.cfi_def_cfa_offset 24
                                        @ kill: def $r3 killed $r0
	strb.w	r0, [sp, #15]
	str	r1, [sp, #8]
	str	r2, [sp, #4]
	movs	r0, #0
	str	r0, [sp]
	ldrb.w	r0, [sp, #15]
	cbz	r0, .LBB1_2
	b	.LBB1_1
.LBB1_1:
	b	.LBB1_6
.LBB1_2:
	ldr	r0, [sp, #8]
	cbz	r0, .LBB1_4
	b	.LBB1_3
.LBB1_3:
	ldr	r0, [sp, #4]
	cmp	r0, #3
	bhi	.LBB1_5
	b	.LBB1_4
.LBB1_4:
	b	.LBB1_6
.LBB1_5:
	movw	r0, :lower16:g_tec_vars_param
	movt	r0, :upper16:g_tec_vars_param
	vldr	s0, [r0]
	vldr	s2, .LCPI1_0
	vmul.f32	s0, s0, s2
	vcvt.u32.f32	s0, s0
	vstr	s0, [sp]
	ldr	r0, [sp, #8]
	ldr	r1, [sp]
	bl	set_u32
	b	.LBB1_6
.LBB1_6:
	add	sp, #16
	pop	{r7, pc}
	.p2align	2
@ %bb.7:
.LCPI1_0:
	.long	0x42c80000                      @ float 100
.Lfunc_end1:
	.size	tec_i2c_vtec_ctl_reg_read, .Lfunc_end1-tec_i2c_vtec_ctl_reg_read
	.cfi_endproc
	.cantunwind
	.fnend
                                        @ -- End function
	.section	.text.tec_i2_ctl_temperature_reg_read,"ax",%progbits
	.hidden	tec_i2_ctl_temperature_reg_read @ -- Begin function tec_i2_ctl_temperature_reg_read
	.globl	tec_i2_ctl_temperature_reg_read
	.p2align	2
	.type	tec_i2_ctl_temperature_reg_read,%function
	.code	16                              @ @tec_i2_ctl_temperature_reg_read
	.thumb_func
tec_i2_ctl_temperature_reg_read:
	.fnstart
	.cfi_startproc
@ %bb.0:
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.pad	#24
	sub	sp, #24
	.cfi_def_cfa_offset 32
                                        @ kill: def $r3 killed $r0
	strb.w	r0, [sp, #23]
	str	r1, [sp, #16]
	str	r2, [sp, #12]
	movs	r0, #0
	str	r0, [sp, #8]
	str	r0, [sp, #4]
	str	r0, [sp]
	ldrb.w	r0, [sp, #23]
	cmp	r0, #2
	beq	.LBB2_2
	b	.LBB2_1
.LBB2_1:
	b	.LBB2_7
.LBB2_2:
	ldr	r0, [sp, #16]
	cbnz	r0, .LBB2_4
	b	.LBB2_3
.LBB2_3:
	b	.LBB2_7
.LBB2_4:
	ldr	r0, [sp, #12]
	cmp	r0, #3
	bhi	.LBB2_6
	b	.LBB2_5
.LBB2_5:
	b	.LBB2_7
.LBB2_6:
	add	r0, sp, #4
	bl	get_tec_therm_temperature
	vldr	s0, [sp, #4]
	vldr	s2, .LCPI2_0
	vadd.f32	s0, s0, s2
	vldr	s2, .LCPI2_1
	vmul.f32	s0, s0, s2
	vcvt.u32.f32	s0, s0
	vstr	s0, [sp, #8]
	ldr	r0, [sp, #16]
	ldr	r1, [sp, #8]
	bl	set_u32
	b	.LBB2_7
.LBB2_7:
	add	sp, #24
	pop	{r7, pc}
	.p2align	2
@ %bb.8:
.LCPI2_0:
	.long	0x42200000                      @ float 40
.LCPI2_1:
	.long	0x42c80000                      @ float 100
.Lfunc_end2:
	.size	tec_i2_ctl_temperature_reg_read, .Lfunc_end2-tec_i2_ctl_temperature_reg_read
	.cfi_endproc
	.cantunwind
	.fnend
                                        @ -- End function
	.section	.text.tec_i2c_calc_ctl_auto_reg_write,"ax",%progbits
	.hidden	tec_i2c_calc_ctl_auto_reg_write @ -- Begin function tec_i2c_calc_ctl_auto_reg_write
	.globl	tec_i2c_calc_ctl_auto_reg_write
	.p2align	2
	.type	tec_i2c_calc_ctl_auto_reg_write,%function
	.code	16                              @ @tec_i2c_calc_ctl_auto_reg_write
	.thumb_func
tec_i2c_calc_ctl_auto_reg_write:
	.fnstart
	.cfi_startproc
@ %bb.0:
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.pad	#16
	sub	sp, #16
	.cfi_def_cfa_offset 24
	str	r0, [sp, #12]
	str	r1, [sp, #8]
	movs	r0, #0
	strb.w	r0, [sp, #7]
	ldr	r0, [sp, #12]
	cbz	r0, .LBB3_2
	b	.LBB3_1
.LBB3_1:
	ldr	r0, [sp, #8]
	cmp	r0, #1
	bhi	.LBB3_3
	b	.LBB3_2
.LBB3_2:
	b	.LBB3_7
.LBB3_3:
	ldr	r0, [sp, #12]
	ldrb	r1, [r0]
	ldrb.w	r0, [sp, #7]
	orrs	r0, r1
	strb.w	r0, [sp, #7]
	ldrb.w	r0, [sp, #7]
	cmp	r0, #4
	beq	.LBB3_5
	b	.LBB3_4
.LBB3_4:
	b	.LBB3_7
.LBB3_5:
	ldr	r0, [sp, #12]
	ldrb	r1, [r0, #1]
	movw	r0, :lower16:g_tec_vars_param
	movt	r0, :upper16:g_tec_vars_param
	strb	r1, [r0, #5]
	ldrb	r0, [r0, #5]
	cbnz	r0, .LBB3_7
	b	.LBB3_6
.LBB3_6:
	movw	r0, :lower16:g_tec_vars_param
	movt	r0, :upper16:g_tec_vars_param
	movs	r1, #0
	movt	r1, #16288
	str	r1, [r0]
	vldr	s0, [r0]
	bl	tec_set_ctl_voltage
	b	.LBB3_7
.LBB3_7:
	add	sp, #16
	pop	{r7, pc}
.Lfunc_end3:
	.size	tec_i2c_calc_ctl_auto_reg_write, .Lfunc_end3-tec_i2c_calc_ctl_auto_reg_write
	.cfi_endproc
	.cantunwind
	.fnend
                                        @ -- End function
	.section	.text.tec_i2c_temperature_obj_write,"ax",%progbits
	.hidden	tec_i2c_temperature_obj_write   @ -- Begin function tec_i2c_temperature_obj_write
	.globl	tec_i2c_temperature_obj_write
	.p2align	2
	.type	tec_i2c_temperature_obj_write,%function
	.code	16                              @ @tec_i2c_temperature_obj_write
	.thumb_func
tec_i2c_temperature_obj_write:
	.fnstart
	.cfi_startproc
@ %bb.0:
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.pad	#16
	sub	sp, #16
	.cfi_def_cfa_offset 24
	str	r0, [sp, #12]
	str	r1, [sp, #8]
	movs	r0, #0
	strb.w	r0, [sp, #7]
	ldr	r0, [sp, #12]
	cbz	r0, .LBB4_2
	b	.LBB4_1
.LBB4_1:
	ldr	r0, [sp, #8]
	cmp	r0, #2
	bhi	.LBB4_3
	b	.LBB4_2
.LBB4_2:
	b	.LBB4_6
.LBB4_3:
	ldr	r0, [sp, #12]
	ldrb	r1, [r0]
	ldrb.w	r0, [sp, #7]
	orrs	r0, r1
	strb.w	r0, [sp, #7]
	ldrb.w	r0, [sp, #7]
	cmp	r0, #5
	beq	.LBB4_5
	b	.LBB4_4
.LBB4_4:
	b	.LBB4_6
.LBB4_5:
	movw	r1, :lower16:g_tec_vars_param
	movt	r1, :upper16:g_tec_vars_param
	str	r1, [sp]                        @ 4-byte Spill
	ldrh	r0, [r1, #6]
	movs	r0, #0
	strh	r0, [r1, #6]
	ldr	r0, [sp, #12]
	adds	r0, #1
	bl	get_u16
	mov	r2, r0
	ldr	r0, [sp]                        @ 4-byte Reload
	ldrh	r1, [r0, #6]
	orrs	r1, r2
	strh	r1, [r0, #6]
	ldrh	r0, [r0, #6]
	bl	tec_save_ctl_temperature_value
	b	.LBB4_6
.LBB4_6:
	add	sp, #16
	pop	{r7, pc}
.Lfunc_end4:
	.size	tec_i2c_temperature_obj_write, .Lfunc_end4-tec_i2c_temperature_obj_write
	.cfi_endproc
	.cantunwind
	.fnend
                                        @ -- End function
	.section	.text.tec_xtec_value_reg_read,"ax",%progbits
	.hidden	tec_xtec_value_reg_read         @ -- Begin function tec_xtec_value_reg_read
	.globl	tec_xtec_value_reg_read
	.p2align	2
	.type	tec_xtec_value_reg_read,%function
	.code	16                              @ @tec_xtec_value_reg_read
	.thumb_func
tec_xtec_value_reg_read:
	.fnstart
	.cfi_startproc
@ %bb.0:
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.pad	#24
	sub	sp, #24
	.cfi_def_cfa_offset 32
                                        @ kill: def $r3 killed $r0
	strb.w	r0, [sp, #23]
	str	r1, [sp, #16]
	str	r2, [sp, #12]
	movs	r0, #0
	str	r0, [sp, #8]
	str	r0, [sp, #4]
	str	r0, [sp]
	ldrb.w	r0, [sp, #23]
	cmp	r0, #10
	beq	.LBB5_2
	b	.LBB5_1
.LBB5_1:
	b	.LBB5_7
.LBB5_2:
	ldr	r0, [sp, #16]
	cbnz	r0, .LBB5_4
	b	.LBB5_3
.LBB5_3:
	b	.LBB5_7
.LBB5_4:
	ldr	r0, [sp, #12]
	cmp	r0, #3
	bhi	.LBB5_6
	b	.LBB5_5
.LBB5_5:
	b	.LBB5_7
.LBB5_6:
	add	r0, sp, #4
	bl	tec_get_xtec_voltage
	vldr	s0, [sp, #4]
	vldr	s2, .LCPI5_0
	vmul.f32	s0, s0, s2
	vcvt.u32.f32	s0, s0
	vstr	s0, [sp]
	ldr	r0, [sp, #16]
	ldr	r1, [sp]
	bl	set_u32
	b	.LBB5_7
.LBB5_7:
	add	sp, #24
	pop	{r7, pc}
	.p2align	2
@ %bb.8:
.LCPI5_0:
	.long	0x42c80000                      @ float 100
.Lfunc_end5:
	.size	tec_xtec_value_reg_read, .Lfunc_end5-tec_xtec_value_reg_read
	.cfi_endproc
	.cantunwind
	.fnend
                                        @ -- End function
	.section	.text.test_tec_i2c_rest_gpio_write,"ax",%progbits
	.hidden	test_tec_i2c_rest_gpio_write    @ -- Begin function test_tec_i2c_rest_gpio_write
	.globl	test_tec_i2c_rest_gpio_write
	.p2align	2
	.type	test_tec_i2c_rest_gpio_write,%function
	.code	16                              @ @test_tec_i2c_rest_gpio_write
	.thumb_func
test_tec_i2c_rest_gpio_write:
	.fnstart
	.cfi_startproc
@ %bb.0:
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.pad	#16
	sub	sp, #16
	.cfi_def_cfa_offset 24
	str	r0, [sp, #12]
	str	r1, [sp, #8]
	movs	r0, #0
	strb.w	r0, [sp, #7]
	ldr	r0, [sp, #12]
	cbz	r0, .LBB6_2
	b	.LBB6_1
.LBB6_1:
	ldr	r0, [sp, #8]
	cmp	r0, #2
	bhi	.LBB6_3
	b	.LBB6_2
.LBB6_2:
	b	.LBB6_6
.LBB6_3:
	ldr	r0, [sp, #12]
	ldrb	r1, [r0]
	ldrb.w	r0, [sp, #7]
	orrs	r0, r1
	strb.w	r0, [sp, #7]
	ldrb.w	r0, [sp, #7]
	cmp	r0, #230
	beq	.LBB6_5
	b	.LBB6_4
.LBB6_4:
	b	.LBB6_6
.LBB6_5:
	bl	sgm1296_tec_init
	b	.LBB6_6
.LBB6_6:
	add	sp, #16
	pop	{r7, pc}
.Lfunc_end6:
	.size	test_tec_i2c_rest_gpio_write, .Lfunc_end6-test_tec_i2c_rest_gpio_write
	.cfi_endproc
	.cantunwind
	.fnend
                                        @ -- End function
	.ident	"Component: Arm Compiler for Embedded 6.19 Tool: armclang [5e73cb00]"
	.section	".note.GNU-stack","",%progbits
	.eabi_attribute	30, 6	@ Tag_ABI_optimization_goals
	.ARM_attribute	16, 1	@ Tag_AV_eba
