	.text
	.syntax unified
	.eabi_attribute	67, "2.09"	@ Tag_conformance
	.cpu	cortex-m33
	.eabi_attribute	6, 17	@ Tag_CPU_arch
	.eabi_attribute	7, 77	@ Tag_CPU_arch_profile
	.eabi_attribute	8, 0	@ Tag_ARM_ISA_use
	.eabi_attribute	9, 3	@ Tag_THUMB_ISA_use
	.fpu	fpv5-sp-d16
	.eabi_attribute	27, 1	@ Tag_ABI_HardFP_use
	.eabi_attribute	36, 1	@ Tag_FP_HP_extension
	.eabi_attribute	34, 1	@ Tag_CPU_unaligned_access
	.eabi_attribute	17, 1	@ Tag_ABI_PCS_GOT_use
	.eabi_attribute	20, 2	@ Tag_ABI_FP_denormal
	.eabi_attribute	21, 0	@ Tag_ABI_FP_exceptions
	.eabi_attribute	23, 1	@ Tag_ABI_FP_number_model
	.eabi_attribute	24, 1	@ Tag_ABI_align_needed
	.eabi_attribute	25, 1	@ Tag_ABI_align_preserved
	.eabi_attribute	28, 1	@ Tag_ABI_VFP_args
	.eabi_attribute	38, 1	@ Tag_ABI_FP_16bit_format
	.eabi_attribute	18, 2	@ Tag_ABI_PCS_wchar_t
	.eabi_attribute	26, 1	@ Tag_ABI_enum_size
	.eabi_attribute	14, 0	@ Tag_ABI_PCS_R9_use
	.file	"gd32e501_wwdgt.c"
	.section	.text.wwdgt_deinit,"ax",%progbits
	.hidden	wwdgt_deinit                    @ -- Begin function wwdgt_deinit
	.globl	wwdgt_deinit
	.p2align	2
	.type	wwdgt_deinit,%function
	.code	16                              @ @wwdgt_deinit
	.thumb_func
wwdgt_deinit:
	.fnstart
	.cfi_sections .debug_frame
	.cfi_startproc
@ %bb.0:
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.pad	#8
	sub	sp, #8
	.cfi_def_cfa_offset 16
	movw	r0, #1035
	str	r0, [sp, #4]                    @ 4-byte Spill
	bl	rcu_periph_reset_enable
	ldr	r0, [sp, #4]                    @ 4-byte Reload
	bl	rcu_periph_reset_disable
	add	sp, #8
	pop	{r7, pc}
.Lfunc_end0:
	.size	wwdgt_deinit, .Lfunc_end0-wwdgt_deinit
	.cfi_endproc
	.cantunwind
	.fnend
                                        @ -- End function
	.section	.text.wwdgt_enable,"ax",%progbits
	.hidden	wwdgt_enable                    @ -- Begin function wwdgt_enable
	.globl	wwdgt_enable
	.p2align	2
	.type	wwdgt_enable,%function
	.code	16                              @ @wwdgt_enable
	.thumb_func
wwdgt_enable:
	.fnstart
	.cfi_startproc
@ %bb.0:
	movw	r1, #11264
	movt	r1, #16384
	ldr	r0, [r1]
	orr	r0, r0, #128
	str	r0, [r1]
	bx	lr
.Lfunc_end1:
	.size	wwdgt_enable, .Lfunc_end1-wwdgt_enable
	.cfi_endproc
	.cantunwind
	.fnend
                                        @ -- End function
	.section	.text.wwdgt_counter_update,"ax",%progbits
	.hidden	wwdgt_counter_update            @ -- Begin function wwdgt_counter_update
	.globl	wwdgt_counter_update
	.p2align	2
	.type	wwdgt_counter_update,%function
	.code	16                              @ @wwdgt_counter_update
	.thumb_func
wwdgt_counter_update:
	.fnstart
	.cfi_startproc
@ %bb.0:
	.pad	#8
	sub	sp, #8
	.cfi_def_cfa_offset 8
                                        @ kill: def $r1 killed $r0
	strh.w	r0, [sp, #6]
	movs	r0, #0
	str	r0, [sp]
	movw	r1, #11264
	movt	r1, #16384
	ldr	r0, [r1]
	bic	r0, r0, #127
	str	r0, [sp]
	ldrh.w	r0, [sp, #6]
	and	r2, r0, #127
	ldr	r0, [sp]
	orrs	r0, r2
	str	r0, [sp]
	ldr	r0, [sp]
	str	r0, [r1]
	add	sp, #8
	bx	lr
.Lfunc_end2:
	.size	wwdgt_counter_update, .Lfunc_end2-wwdgt_counter_update
	.cfi_endproc
	.cantunwind
	.fnend
                                        @ -- End function
	.section	.text.wwdgt_config,"ax",%progbits
	.hidden	wwdgt_config                    @ -- Begin function wwdgt_config
	.globl	wwdgt_config
	.p2align	2
	.type	wwdgt_config,%function
	.code	16                              @ @wwdgt_config
	.thumb_func
wwdgt_config:
	.fnstart
	.cfi_startproc
@ %bb.0:
	.pad	#16
	sub	sp, #16
	.cfi_def_cfa_offset 16
                                        @ kill: def $r3 killed $r1
                                        @ kill: def $r3 killed $r0
	strh.w	r0, [sp, #14]
	strh.w	r1, [sp, #12]
	str	r2, [sp, #8]
	movs	r0, #0
	str	r0, [sp, #4]
	str	r0, [sp]
	movw	r2, #11268
	movt	r2, #16384
	ldr	r0, [r2]
	movw	r1, #511
	bics	r0, r1
	str	r0, [sp, #4]
	movw	r1, #11264
	movt	r1, #16384
	ldr	r0, [r1]
	bic	r0, r0, #127
	str	r0, [sp]
	ldrh.w	r0, [sp, #12]
	and	r3, r0, #127
	ldr	r0, [sp, #4]
	orrs	r0, r3
	str	r0, [sp, #4]
	ldr	r3, [sp, #8]
	ldr	r0, [sp, #4]
	orrs	r0, r3
	str	r0, [sp, #4]
	ldrh.w	r0, [sp, #14]
	and	r3, r0, #127
	ldr	r0, [sp]
	orrs	r0, r3
	str	r0, [sp]
	ldr	r0, [sp, #4]
	str	r0, [r2]
	ldr	r0, [sp]
	str	r0, [r1]
	add	sp, #16
	bx	lr
.Lfunc_end3:
	.size	wwdgt_config, .Lfunc_end3-wwdgt_config
	.cfi_endproc
	.cantunwind
	.fnend
                                        @ -- End function
	.section	.text.wwdgt_interrupt_enable,"ax",%progbits
	.hidden	wwdgt_interrupt_enable          @ -- Begin function wwdgt_interrupt_enable
	.globl	wwdgt_interrupt_enable
	.p2align	2
	.type	wwdgt_interrupt_enable,%function
	.code	16                              @ @wwdgt_interrupt_enable
	.thumb_func
wwdgt_interrupt_enable:
	.fnstart
	.cfi_startproc
@ %bb.0:
	movw	r1, #11268
	movt	r1, #16384
	ldr	r0, [r1]
	orr	r0, r0, #512
	str	r0, [r1]
	bx	lr
.Lfunc_end4:
	.size	wwdgt_interrupt_enable, .Lfunc_end4-wwdgt_interrupt_enable
	.cfi_endproc
	.cantunwind
	.fnend
                                        @ -- End function
	.section	.text.wwdgt_flag_get,"ax",%progbits
	.hidden	wwdgt_flag_get                  @ -- Begin function wwdgt_flag_get
	.globl	wwdgt_flag_get
	.p2align	2
	.type	wwdgt_flag_get,%function
	.code	16                              @ @wwdgt_flag_get
	.thumb_func
wwdgt_flag_get:
	.fnstart
	.cfi_startproc
@ %bb.0:
	.pad	#4
	sub	sp, #4
	.cfi_def_cfa_offset 4
	movw	r0, #11272
	movt	r0, #16384
	ldr	r0, [r0]
	lsls	r0, r0, #31
	cbz	r0, .LBB5_2
	b	.LBB5_1
.LBB5_1:
	movs	r0, #1
	strb.w	r0, [sp, #3]
	b	.LBB5_3
.LBB5_2:
	movs	r0, #0
	strb.w	r0, [sp, #3]
	b	.LBB5_3
.LBB5_3:
	ldrb.w	r0, [sp, #3]
	add	sp, #4
	bx	lr
.Lfunc_end5:
	.size	wwdgt_flag_get, .Lfunc_end5-wwdgt_flag_get
	.cfi_endproc
	.cantunwind
	.fnend
                                        @ -- End function
	.section	.text.wwdgt_flag_clear,"ax",%progbits
	.hidden	wwdgt_flag_clear                @ -- Begin function wwdgt_flag_clear
	.globl	wwdgt_flag_clear
	.p2align	2
	.type	wwdgt_flag_clear,%function
	.code	16                              @ @wwdgt_flag_clear
	.thumb_func
wwdgt_flag_clear:
	.fnstart
	.cfi_startproc
@ %bb.0:
	movw	r1, #11272
	movt	r1, #16384
	ldr	r0, [r1]
	bic	r0, r0, #1
	str	r0, [r1]
	bx	lr
.Lfunc_end6:
	.size	wwdgt_flag_clear, .Lfunc_end6-wwdgt_flag_clear
	.cfi_endproc
	.cantunwind
	.fnend
                                        @ -- End function
	.ident	"Component: Arm Compiler for Embedded 6.19 Tool: armclang [5e73cb00]"
	.section	".note.GNU-stack","",%progbits
	.eabi_attribute	30, 6	@ Tag_ABI_optimization_goals
	.ARM_attribute	16, 1	@ Tag_AV_eba
